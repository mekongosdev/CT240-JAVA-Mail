
import java.awt.event.KeyEvent;
import java.util.Properties;
import javax.mail.Folder;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Store;
import javax.swing.JOptionPane;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sj
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public login() {
        initComponents();
//        this.getRootPane().setDefaultButton(LoginButton);
        LoginButton.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Loading2 = new javax.swing.JLabel();
        Loading = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        LoginButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JLabel();
        remember = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaMail");
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Loading2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        Loading2.setForeground(new java.awt.Color(0, 153, 153));
        Loading2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Loading2.setText("Login...");
        getContentPane().add(Loading2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 240, 70));

        Loading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Loading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/giphy.gif"))); // NOI18N
        Loading.setToolTipText(null);
        getContentPane().add(Loading, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 448, 418));

        username.setPreferredSize(new java.awt.Dimension(6, 24));
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameKeyPressed(evt);
            }
        });
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 237, 260, -1));

        password.setToolTipText("");
        password.setPreferredSize(new java.awt.Dimension(6, 24));
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 288, 260, -1));

        LoginButton.setBackground(new java.awt.Color(0, 153, 153));
        LoginButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setText("Login");
        LoginButton.setContentAreaFilled(false);
        LoginButton.setOpaque(true);
        LoginButton.setSelected(true);
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LoginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LoginButtonMouseExited(evt);
            }
        });
        getContentPane().add(LoginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 110, 41));

        CloseButton.setBackground(new java.awt.Color(51, 51, 51));
        CloseButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CloseButton.setForeground(new java.awt.Color(255, 255, 255));
        CloseButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CloseButton.setText("X");
        CloseButton.setToolTipText(null);
        CloseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CloseButton.setMaximumSize(new java.awt.Dimension(24, 24));
        CloseButton.setMinimumSize(new java.awt.Dimension(24, 24));
        CloseButton.setOpaque(true);
        CloseButton.setPreferredSize(new java.awt.Dimension(24, 24));
        CloseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CloseButtonMouseExited(evt);
            }
        });
        getContentPane().add(CloseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 0, -1, -1));

        remember.setBackground(new java.awt.Color(61, 61, 61));
        remember.setForeground(new java.awt.Color(255, 255, 255));
        remember.setSelected(true);
        remember.setText("Remember me");
        remember.setOpaque(false);
        getContentPane().add(remember, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 320, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 270, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Username");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 220, -1, -1));

        bg.setBackground(new java.awt.Color(61, 61, 61));
        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Login.png"))); // NOI18N
        bg.setToolTipText(null
        );
        bg.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        bg.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        bg.setOpaque(true);
        bg.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                bgMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                bgMouseMoved(evt);
            }
        });
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 420));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    public void Checking(){
        String host = "imap.gmail.com";// change accordingly
        String mailStoreType = "imaps";
        
        Loading.setVisible(true);
        Loading2.setVisible(true);
        
        try {
            System.out.println("Login......");
        //create properties field
        Properties properties = new Properties();
        properties.put("mail.imap.host", host);
        properties.put("mail.imap.port", "993");
        properties.put("mail.imap.starttls.enable", "true");   
        
         // Setup authentication, get session
        Session emailSession = Session.getInstance(properties);
        
        emailSession.setDebug(true);
        String user = username.getText();
        String pass =  password.getText();
        //create the IMAP store object and connect with the pop server
        Store store = emailSession.getStore(mailStoreType);      
        store.connect(host, user, pass);    
        
        ConnectSql conn = new ConnectSql();
        
        System.out.println("get list box");
        conn.deleteBox();
        String[] listbox = new String[4];
        Folder[] f = store.getDefaultFolder().list();

        conn.insertBox("INBOX",f[0].getName());
        listbox[0]=f[0].getName();

        for(Folder fd: store.getFolder("[Gmail]").list()) 
            System.out.println(">> "+fd.getName()); 

        Folder[] fd = store.getFolder("[Gmail]").list();

        String sent = fd[5].getName();
        String spam = fd[1].getName();
        String trash = fd[2].getName();
        Folder f2;
        
        try {
            f2 = store.getFolder("[Gmail]/Sent Mail");
            f2.open(Folder.READ_ONLY);
            conn.insertBox("Sent","[Gmail]/Sent Mail");
            listbox[1]="[Gmail]/Sent Mail";            
        } catch (MessagingException ex) {
            conn.insertBox("Sent","[Gmail]/"+sent);
            listbox[1]="[Gmail]/"+sent;
        }
        try {
            f2 = store.getFolder("[Gmail]/Spam");
            f2.open(Folder.READ_ONLY);
            conn.insertBox("Spam","[Gmail]/Spam");
            listbox[2]="[Gmail]/Spam";
        } catch (MessagingException ex) {
        }
       
        try {
            f2 = store.getFolder("[Gmail]/Bin");
            f2.open(Folder.READ_ONLY);
            conn.insertBox("Trash","[Gmail]/Bin");
            listbox[3]="[Gmail]/Bin";
        } catch (MessagingException ex) {
            conn.insertBox("Trash","[Gmail]/"+trash);
            listbox[3]="[Gmail]/"+trash;
        }
        
        //create user remember
        if (remember.isSelected()){   
            conn.insertUser(user, pass);
            System.out.println("save user:");
        }  
        store.close();
        MainForm mf = new MainForm(username.getText(), password.getText());
        mf.setListBox(listbox);
        mf.setVisible(true);
        this.dispose();
        
        } catch (MessagingException e) {
            Loading2.setVisible(false);
            Loading.setVisible(false);
            JOptionPane.showMessageDialog(null, "Sai usename hoặc password! \nhoặc truy cập vào: https://support.google.com/mail/accounts/answer/78754 để biết thêm thông tin", "Đăng nhập không thành công" , JOptionPane.INFORMATION_MESSAGE);
        }
    }
        
    
    private void LoginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseClicked
       (new Thread(new CheckLogin(this))).start();
    }//GEN-LAST:event_LoginButtonMouseClicked

    private void LoginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseEntered
        LoginButton.setBackground(new java.awt.Color(102,204,204));
    }//GEN-LAST:event_LoginButtonMouseEntered

    private void LoginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseExited
        // TODO add your handling code here:
        LoginButton.setBackground(new java.awt.Color(0,153,153));
    }//GEN-LAST:event_LoginButtonMouseExited
    
    private int xMouse;
    private int yMouse;
    
    private void bgMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x-xMouse, y-yMouse);   
    }//GEN-LAST:event_bgMouseDragged

    private void bgMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseMoved
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_bgMouseMoved

    private void CloseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseButtonMouseClicked
        System.exit(0);
    }//GEN-LAST:event_CloseButtonMouseClicked

    private void CloseButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseButtonMouseEntered
        CloseButton.setBackground(new java.awt.Color(255,102,102));
    }//GEN-LAST:event_CloseButtonMouseEntered

    private void CloseButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseButtonMouseExited
       CloseButton.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_CloseButtonMouseExited

    private void usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            (new Thread(new CheckLogin(this))).start();
//        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
//            this.dispose();
    }//GEN-LAST:event_usernameKeyPressed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            (new Thread(new CheckLogin(this))).start();
//        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
//            this.dispose();
    }//GEN-LAST:event_passwordKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Loading2.setVisible(false);
        Loading.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CloseButton;
    private javax.swing.JLabel Loading;
    private javax.swing.JLabel Loading2;
    private javax.swing.JButton LoginButton;
    private javax.swing.JLabel bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField password;
    private javax.swing.JCheckBox remember;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
