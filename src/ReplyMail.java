/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;


import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Address;
import javax.mail.BodyPart;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Store;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;


/**
 *
 * @author Sj
 */
public class ReplyMail extends javax.swing.JFrame {

    private int xMouse;
    private int yMouse;
    
    private String username;//change accordingly
    private String password;//change accordingly
    private String host;
    private Properties props;
    private Session session ;
    
    private Session imap;
    private int id;
    private String box;
    
    private List<DataSource> attachments = new ArrayList<DataSource>();
    
    Replying replying = new Replying();
    
    /**
     * Creates new form NewJFrame
     */
    public ReplyMail() {
        initComponents();
    }
    public ReplyMail(int id, Session imap, String box, String user, String pass, String to, String subject) {
        initComponents();
        username = user ;
        password = pass; 
        this.To.setText(to);
        this.subject.setText("Re "+ subject);
        this.imap = imap;
        this.id = id;
        this.box = box;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Mes = new javax.swing.JTextArea();
        To = new javax.swing.JTextField();
        subject = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Reply = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        addAttachment = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Close = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Send mail");
        setBackground(new java.awt.Color(102, 102, 102));
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        Mes.setColumns(20);
        Mes.setRows(5);
        jScrollPane1.setViewportView(Mes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 498, 169));

        To.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        To.setEnabled(false);
        getContentPane().add(To, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 450, 20));

        subject.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        subject.setEnabled(false);
        getContentPane().add(subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 450, 20));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("To :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 34, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Subject:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Message:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        Reply.setBackground(new java.awt.Color(51, 51, 51));
        Reply.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Reply.setForeground(new java.awt.Color(255, 255, 255));
        Reply.setText("Reply");
        Reply.setToolTipText("Reply");
        Reply.setBorder(null);
        Reply.setBorderPainted(false);
        Reply.setContentAreaFilled(false);
        Reply.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Reply.setOpaque(true);
        Reply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReplyMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ReplyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ReplyMouseExited(evt);
            }
        });
        getContentPane().add(Reply, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 120, 40));
        Reply.getAccessibleContext().setAccessibleParent(this);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Attachments:");
        jLabel5.setToolTipText("");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        addAttachment.setBackground(new java.awt.Color(51, 51, 51));
        addAttachment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addAttachment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/attachment.png"))); // NOI18N
        addAttachment.setToolTipText("Add Attachment");
        addAttachment.setOpaque(true);
        addAttachment.setPreferredSize(new java.awt.Dimension(40, 40));
        addAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAttachmentMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addAttachmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addAttachmentMouseExited(evt);
            }
        });
        getContentPane().add(addAttachment, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 300, -1, -1));

        jLabel6.setBackground(new java.awt.Color(51, 51, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/UI/reply.png"))); // NOI18N
        jLabel6.setText("Reply");
        jLabel6.setToolTipText("");
        jLabel6.setOpaque(true);
        jLabel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel6MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel6MouseMoved(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 496, 24));

        Close.setBackground(new java.awt.Color(51, 51, 51));
        Close.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Close.setForeground(new java.awt.Color(255, 255, 255));
        Close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Close.setText("X");
        Close.setToolTipText("Close");
        Close.setMaximumSize(new java.awt.Dimension(24, 24));
        Close.setMinimumSize(new java.awt.Dimension(24, 24));
        Close.setOpaque(true);
        Close.setPreferredSize(new java.awt.Dimension(24, 24));
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CloseMouseExited(evt);
            }
        });
        getContentPane().add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 0, -1, -1));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane2.setViewportView(jPanel2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 460, 60));

        jLabel8.setBackground(new java.awt.Color(102, 102, 102));
        jLabel8.setToolTipText(null
        );
        jLabel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, 520, 400));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
//        from = username = "sj.dev.96@gmail.com";
//        password ="thi3nminh";
        
        host = "smtp.gmail.com";
        
        props = new Properties();        
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", 465);
        props.put("mail.smtp.starttls.enable","true");
        props.put("mail.smtp.debug", "true");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.socketFactory.port", 465);
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        
        session = Session.getInstance(props,
            new javax.mail.Authenticator() {
                  protected PasswordAuthentication getPasswordAuthentication() {
                          return new PasswordAuthentication(username, password);
                  }
            });
//        session.setDebug(true);

    }//GEN-LAST:event_formWindowOpened
   
    
    private void ReplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReplyMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        replying.setVisible(true);
        (new Thread(new ReplyingMail(this))).start();       
    }//GEN-LAST:event_ReplyMouseClicked
          
    public void SendEmail(){
         try {          
            Store getmail = imap.getStore("imaps");
            getmail.connect("imap.gmail.com",username, password );
            Folder f = getmail.getFolder(box);
            f.open(Folder.READ_ONLY);
            Message message = f.getMessage(id);
            
            String to = InternetAddress.toString(message.getRecipients(Message.RecipientType.TO));
            // Create a default MimeMessage object.
            Message replyMessage = new MimeMessage(session);
            
            replyMessage = (MimeMessage) message.reply(false);

            // Set From: header field of the header.        
            replyMessage.setFrom(new InternetAddress(to));
            //set Repply to:
            replyMessage.setReplyTo(message.getReplyTo());

            System.out.println("add new address TO: "+to);
            // Now set the actual message
            if (attachments.size()>0){
                // Create the message part
                BodyPart messageBodyPart = new MimeBodyPart();

                // Now set the actual message
                messageBodyPart.setText(Mes.getText());

                // Create a multipar message
                Multipart multipart = new MimeMultipart();

                // Set text message part
                multipart.addBodyPart(messageBodyPart);

                // Part two is attachment           
                for ( DataSource source: attachments){
                    messageBodyPart = new MimeBodyPart();

                    messageBodyPart.setDataHandler(new DataHandler(source));
                    messageBodyPart.setFileName(source.getName());   

                    System.out.println("add new File: "+source.getName());

                    multipart.addBodyPart(messageBodyPart);
                }
                // Send the complete message parts
                replyMessage.setContent(multipart);

            }else {
                replyMessage.setText(Mes.getText());
            }

            // Send message
            Transport t = session.getTransport("smtp");
            try {
               //connect to the smpt server using transport instance
               //change the user and password accordingly	
               t.connect(username, password);
               t.sendMessage(replyMessage,
                  replyMessage.getAllRecipients());
            } finally {
               t.close();
            }
            
            f.close(false);
            getmail.close();

            replying.Sent();
             try {
                Thread.sleep(5000);
                replying.dispose();
             } catch (InterruptedException ex) {
                 
             }
    //        JOptionPane.showMessageDialog(null, "Đã gửi thành công", "Thông báo" , JOptionPane.INFORMATION_MESSAGE);
            this.dispose();        
        
            
        } catch (MessagingException e) {
//            JOptionPane.showMessageDialog(null, "Không thể gửi đc Mail", "Thông báo" , JOptionPane.INFORMATION_MESSAGE);
            replying.setVisible(true);
            replying.SentError();
        }
    }

    private void jLabel6MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x-xMouse, y-yMouse);   
    }//GEN-LAST:event_jLabel6MouseDragged

    private void jLabel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseMoved
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel6MouseMoved

    private void addAttachmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAttachmentMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")+"/Documents"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();  
            DataSource source = new FileDataSource(selectedFile.getAbsolutePath());

            JPanel attachment = new JPanel();
            attachment.setLayout(new BoxLayout(attachment, BoxLayout.X_AXIS));
            attachment.setBackground(Color.white);
            attachment.setForeground(Color.white);    
            //attachment.setPreferredSize(new Dimension(440,20));
            attachment.setBorder(new LineBorder(Color.white, 3));
            JButton fileName = new JButton();   
            
            fileName.setText(selectedFile.getName());
            fileName.setContentAreaFilled(false);
            fileName.setForeground(Color.WHITE);
            fileName.setBackground(new java.awt.Color(51,51,51));
            fileName.setOpaque(true);
            fileName.setBorderPainted(false);
            attachment.add(fileName);

            JButton deleteAttachment = new JButton();
            deleteAttachment.setText("X");
            deleteAttachment.setContentAreaFilled(false);
            deleteAttachment.setBackground(new java.awt.Color(0,153,153));
            deleteAttachment.setForeground(Color.white);
            deleteAttachment.setOpaque(true);
            deleteAttachment.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e) {
                    jPanel2.remove(attachment);                     
                    jPanel2.revalidate();
                    jPanel2.repaint();
                    attachments.remove(source);
                    System.out.println(attachments.size()+" Remove file: " + selectedFile.getAbsolutePath());
                }
             });
            attachment.add(deleteAttachment);
            attachment.revalidate();    

            jPanel2.add(attachment);         
            jPanel2.revalidate();
            jPanel2.repaint();                     
            try{
                attachments.add(source);
            }catch (Exception ex){
                System.out.println(ex.getMessage());
            }
            System.out.println(attachments.size()+" Selected file: " + selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_addAttachmentMouseClicked

    private void addAttachmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAttachmentMouseEntered
        // TODO add your handling code here:
        addAttachment.setBackground(new java.awt.Color(0,153,153));
    }//GEN-LAST:event_addAttachmentMouseEntered

    private void addAttachmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAttachmentMouseExited
        // TODO add your handling code here:
        addAttachment.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_addAttachmentMouseExited

    private void ReplyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReplyMouseEntered
        // TODO add your handling code here:
        Reply.setBackground(new java.awt.Color(102,204,204));
    }//GEN-LAST:event_ReplyMouseEntered

    private void ReplyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReplyMouseExited
        // TODO add your handling code here:
        Reply.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_ReplyMouseExited

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_CloseMouseClicked

    private void CloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseEntered
        Close.setBackground(new java.awt.Color(255,102,102));
    }//GEN-LAST:event_CloseMouseEntered

    private void CloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseExited
        Close.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_CloseMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {     

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Close;
    private javax.swing.JTextArea Mes;
    private javax.swing.JButton Reply;
    private javax.swing.JTextField To;
    private javax.swing.JLabel addAttachment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField subject;
    // End of variables declaration//GEN-END:variables
}
