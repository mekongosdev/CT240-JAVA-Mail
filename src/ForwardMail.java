/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;


import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Store;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;


/**
 *
 * @author Sj
 */
public class ForwardMail extends javax.swing.JFrame {

    private int xMouse;
    private int yMouse;
    
    private String username;//change accordingly
    private String password;//change accordingly
    private String host;
    private Properties props;
    private Session session ;
    
    private Session imap;
    private int id;
    private String box;
    
    private List<DataSource> attachments = new ArrayList<DataSource>();
    
    Forwarding forwarding = new Forwarding();
    
    /**
     * Creates new form NewJFrame
     */
    public ForwardMail() {
        initComponents();
    }
    public ForwardMail(int id, Session imap, String box, String user, String pass) {
        initComponents();
        username = user ;
        password = pass; 
        
        this.imap = imap;
        this.id = id;
        this.box = box;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ToAdr1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Forward = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Cc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Bcc = new javax.swing.JTextField();
        Close = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Send mail");
        setBackground(new java.awt.Color(102, 102, 102));
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ToAdr1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        getContentPane().add(ToAdr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 450, 20));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("To :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 34, -1, -1));

        Forward.setBackground(new java.awt.Color(51, 51, 51));
        Forward.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Forward.setForeground(new java.awt.Color(255, 255, 255));
        Forward.setText("Forward");
        Forward.setToolTipText("Forward");
        Forward.setBorder(null);
        Forward.setBorderPainted(false);
        Forward.setContentAreaFilled(false);
        Forward.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Forward.setOpaque(true);
        Forward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ForwardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ForwardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ForwardMouseExited(evt);
            }
        });
        getContentPane().add(Forward, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 120, 40));
        Forward.getAccessibleContext().setAccessibleParent(this);

        jLabel6.setBackground(new java.awt.Color(51, 51, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/UI/forward.png"))); // NOI18N
        jLabel6.setText("Forward");
        jLabel6.setToolTipText("");
        jLabel6.setOpaque(true);
        jLabel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel6MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel6MouseMoved(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 496, 24));

        Cc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        getContentPane().add(Cc, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 450, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cc :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 64, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Bcc :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 94, -1, -1));

        Bcc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        getContentPane().add(Bcc, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 450, 20));

        Close.setBackground(new java.awt.Color(51, 51, 51));
        Close.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Close.setForeground(new java.awt.Color(255, 255, 255));
        Close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Close.setText("X");
        Close.setToolTipText("Close");
        Close.setMaximumSize(new java.awt.Dimension(24, 24));
        Close.setMinimumSize(new java.awt.Dimension(24, 24));
        Close.setOpaque(true);
        Close.setPreferredSize(new java.awt.Dimension(24, 24));
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CloseMouseExited(evt);
            }
        });
        getContentPane().add(Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 0, -1, -1));

        jLabel8.setBackground(new java.awt.Color(102, 102, 102));
        jLabel8.setToolTipText(null
        );
        jLabel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, 520, 170));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
//        from = username = "sj.dev.96@gmail.com";
//        password ="thi3nminh";
        
        host = "smtp.gmail.com";
        
        props = new Properties();        
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", 465);
        props.put("mail.smtp.starttls.enable","true");
        props.put("mail.smtp.debug", "true");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.socketFactory.port", 465);
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        
        session = Session.getInstance(props,
            new javax.mail.Authenticator() {
                  protected PasswordAuthentication getPasswordAuthentication() {
                          return new PasswordAuthentication(username, password);
                  }
            });
//        session.setDebug(true);

    }//GEN-LAST:event_formWindowOpened
   
    
    private void ForwardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForwardMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        forwarding.setVisible(true);
        (new Thread(new ForwardingMail(this))).start();       
    }//GEN-LAST:event_ForwardMouseClicked
          
    public void SendEmail(){
         try {          
            Store getmail = imap.getStore("imaps");
            getmail.connect("imap.gmail.com",username, password );
            Folder f = getmail.getFolder(box);
            f.open(Folder.READ_ONLY);
            Message message = f.getMessage(id);
            
            String to = InternetAddress.toString(message.getRecipients(Message.RecipientType.TO));
            
                        
            // Create a default MimeMessage object.
            Message forwardMessage = new MimeMessage(session);
            
            if (!Cc.getText().isEmpty()){
                for (String cc: Cc.getText().split(",")){
                    forwardMessage.setRecipient(Message.RecipientType.CC, new InternetAddress(cc.trim()));
                    System.out.println("add new address CC: "+cc);
                }
            }
            //set BCC
            if (!Bcc.getText().isEmpty()){
                for (String bcc: Bcc.getText().split(",")){
                    forwardMessage.setRecipient(Message.RecipientType.BCC, new InternetAddress(bcc.trim()));
                    System.out.println("add new address BCC: "+bcc);
                }
            }
            
            // Set From: header field of the header.        
            forwardMessage.setFrom(new InternetAddress(to));
            
             // Set To: header field of the header.    
            if (!ToAdr1.getText().isEmpty()){
                for (String t : ToAdr1.getText().split(",")) {
                    forwardMessage.setRecipient(Message.RecipientType.TO, new InternetAddress(t.trim()));
                    System.out.println("add new address TO: "+t);
                }
            }
            
            forwardMessage.setSubject("Fwd: " + message.getSubject());
            forwardMessage.setFrom(new InternetAddress(to));

            // Create the message part
            MimeBodyPart messageBodyPart = new MimeBodyPart();
            // Create a multipart message
            Multipart multipart = new MimeMultipart();
            // set content
            messageBodyPart.setContent(message, "message/rfc822");
            // Add part to multi part
            multipart.addBodyPart(messageBodyPart);
            // Associate multi-part with message
            forwardMessage.setContent(multipart);
            forwardMessage.saveChanges();


            // Send message
            Transport t = session.getTransport("smtp");
            try {
               //connect to the smpt server using transport instance
               //change the user and password accordingly	
               t.connect(username, password);
               t.sendMessage(forwardMessage,
                  forwardMessage.getAllRecipients());
            } finally {
               t.close();
            }
            
            f.close(false);
            getmail.close();

            forwarding.Sent();
             try {
                Thread.sleep(5000);
                forwarding.dispose();
             } catch (InterruptedException ex) {
                 
             }
    //        JOptionPane.showMessageDialog(null, "Đã gửi thành công", "Thông báo" , JOptionPane.INFORMATION_MESSAGE);
            this.dispose();        
        
            
        } catch (MessagingException e) {
//            JOptionPane.showMessageDialog(null, "Không thể gửi đc Mail", "Thông báo" , JOptionPane.INFORMATION_MESSAGE);
            forwarding.setVisible(true);
            forwarding.SentError();
        }
    }

    private void jLabel6MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x-xMouse, y-yMouse);   
    }//GEN-LAST:event_jLabel6MouseDragged

    private void jLabel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseMoved
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel6MouseMoved

    private void ForwardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForwardMouseEntered
        // TODO add your handling code here:
        Forward.setBackground(new java.awt.Color(102,204,204));
    }//GEN-LAST:event_ForwardMouseEntered

    private void ForwardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ForwardMouseExited
        // TODO add your handling code here:
        Forward.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_ForwardMouseExited

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_CloseMouseClicked

    private void CloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseEntered
        Close.setBackground(new java.awt.Color(255,102,102));
    }//GEN-LAST:event_CloseMouseEntered

    private void CloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseExited
        Close.setBackground(new java.awt.Color(51,51,51));
    }//GEN-LAST:event_CloseMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {     

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bcc;
    private javax.swing.JTextField Cc;
    private javax.swing.JLabel Close;
    private javax.swing.JButton Forward;
    private javax.swing.JTextField ToAdr1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
